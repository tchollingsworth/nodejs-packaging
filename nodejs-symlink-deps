#!/usr/bin/python

"""Symlink a node module's dependencies into the node_modules directory so users
can `npm link` RPM-installed modules into their personal projects."""

# Copyright 2012, 2013 T.C. Hollingsworth <tchollingsworth@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

import json
import os
import sys

#the %nodejs_symlink_deps macro passes %nodejs_sitelib as the first argument
sitelib = sys.argv[1]

if '--check' in sys.argv:
    check = True
    modules = [os.getcwd()]
else:
    check = False
    br_sitelib = os.path.join(os.environ['RPM_BUILD_ROOT'], sitelib.lstrip('/'))
    modules = [os.path.join(br_sitelib, module) for module in os.listdir(br_sitelib)]

for path in modules:
    os.chdir(path)
    md = json.load(open('package.json'))
    
    if 'dependencies' in md:
        try:
            os.mkdir('node_modules')
        except OSError:
            sys.stderr.write('WARNING: node_modules already exists. Make sure you have ' +
                                'no bundled dependencies.\n')

        os.chdir('node_modules')

        for dep in md['dependencies'].iterkeys():
            target = os.path.join(sitelib, dep)
            
            if not check or os.path.exists(target):
                os.symlink(target, dep)

        if check and '--no-devdeps' not in sys.argv and 'devDependencies' in md:
            for dep in md['devDependencies']:
                target = os.path.join(sitelib, dep)
        
                if os.path.exists(target):
                    os.symlink(target, dep)
